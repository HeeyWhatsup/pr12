1)

public class Test {
    public static void main(String[]args)
    {
        ICreateDocument ifactory = new IDocumentFactory();
        TextDocument file = ifactory.NewLaunch();
        file.Launch();
    }
}
2)
public interface ICreateDocument
{
    TextDocument NewLaunch();
}
3)
public class IDocumentFactory implements ICreateDocument
{
    public TextDocument NewLaunch()
    {
        return new TextDocument();
    }
}
4)
public interface IDocument
{
    void New();
    void Read();
    void Write();
    void Save();
    void Exit();
}
5)
import java.io.*;
import java.nio.file.Files;
import java.nio.file.Path;

public class TextDocument implements IDocument
{
    private int num = 1;
    private String file;
    private String text;

    public void Launch()
    {
        new File().setVisible(true);
    }

    public void New()
    {
        file = "File" + String.valueOf(num) + ".txt";
        num++;
        try
        {
            Files.createFile(Path.of("d:\\Pr12\\src\\Directoria\\" + file));
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
    }

    public void Read()
    {
        try (FileInputStream f = new FileInputStream("d:\\Pr12\\src\\Directoria\\" + file))
        {
            int b;
            do
            {
                b = f.read();
                if (b != -1)
                {
                    System.out.print((char) b);
                }
            }
            while (b != -1);
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
    }

    public void Write()
    {
        text = "";
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        try
        {
            text = reader.readLine();
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
    }

    public void Save()
    {
        if (text != "")
        {
            try(FileWriter writer = new FileWriter("d:\\Pr12\\src\\Directoria\\" + file, true))
            {
                String lineSeparator = System.getProperty("line.separator");
                writer.write(text + lineSeparator);
                writer.flush();
            }
            catch(IOException ex)
            {
                System.out.println(ex.getMessage());
            }
            text = "";
        }
    }

    public void Exit()
    {
        System.exit(0);
    }
}
6)
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class File extends JFrame
{
    JPanel[] pnl = new JPanel[5];
    JButton button1 = new JButton("New File");
    JButton button2 = new JButton("Read File");
    JButton button3 = new JButton("Write File");
    JButton button4 = new JButton("Save File");
    JButton button5 = new JButton("Exit File");

    public File()
    {
        super("Redactor");
        TextDocument files = new TextDocument();
        setLayout(new GridLayout(1,2));
        for(int i = 0 ; i < pnl.length ; i++)
        {
            int r = (int) (Math.random() * 255);
            int b = (int) (Math.random() * 255);
            int g = (int) (Math.random() * 255);
            int d = (int) (Math.random() * 255);
            pnl[i] = new JPanel();
            pnl[i].setBackground(new Color(r,g,b,d));
            add(pnl[i]);
        }
        setSize(700,75);
        pnl[0].add(button1);
        pnl[1].add(button2);
        pnl[2].add(button3);
        pnl[3].add(button4);
        pnl[4].add(button5);

        button1.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent ae)
            {
                TextDocument file1 = new TextDocument();
                files.New();
            }
        });

        button2.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent ae)
            {
                files.Read();
            }
        });

        button3.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent ae)
            {
                files.Write();
            }
        });

        button4.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent ae)
            {
                files.Save();
            }
        });

        button5.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent ae)
            {
                files.Exit();
            }
        });
    }
}
